% Monte Carlo Simulation
% 

function [bit_error_rate] = monte_carlo(text_input,transmission_location,Apperture,...
            beam_divergence, link_length,LEO_distance,misaligment,...
            atm_conditions,wavelength, av_transmitted_power,BW,...
            modulation,BR)
    demodulation= modulation;
    carrier_frequency = 3e8/wavelength;
    iterations=1000;
    bit_error_rate=zeros(1,iterations);
    for i=1:iterations
        [modulated, binary_text]= transmitter(modulation,text_input,...
        carrier_frequency,av_transmitted_power,BR);
        [through_channel_noisy,~, ~,av_received_power] = channel(modulated, ...
            transmission_location,Apperture,beam_divergence, ...
        link_length,LEO_distance,misaligment,atm_conditions,wavelength, ...
        av_transmitted_power,BW);
        [~, thresholded_signal] = receiver(demodulation, ...
            through_channel_noisy,av_received_power,av_transmitted_power);
        bit_error_rate(i)=biterr(binary_text,thresholded_signal);
    end
end